*WebAssembly using Golang-alternative for javascript

WebAssembly (WASM) is an open technology that allows you to compile your program into portable binary code and run it in a web browser. It was created to enable high-performance applications on web pages, as opposed to JavaScript.

The only programming language that the browser knows is javaScript. JavaScript has shown to be reliable and capable of delivering the performance required by most online applications. However, because JavaScript is interpreted, it falls short in 3D games, virtual reality, augmented reality, and picture editing apps. Despite the fact that JavaScript engines like Gecko and V8 provide Just in Time compilation, JavaScript cannot achieve the high performance required by current online applications.WebAssembly is meant to solve this problem.

WebAssembly is a browser-based virtual assembly language. When we say virtual, we're referring to the fact that it can't run natively on the hardware. Because the browser can run on any architecture, WebAssembly cannot be run directly on the underlying hardware by the browser. However, because it is compiled and is closer to the hardware architecture than JavaScript, this highly optimized virtual assembly format can be handled much faster by modern browsers than vanilla JavaScript. It is more compatible with hardware than JavaScript.

And it is possible to cross compile Go code to WebAssembly.Go has added support for WebAssembly from version 1.1 onwards.
